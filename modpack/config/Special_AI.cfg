# Configuration file

##########################################################################################################
# _general
#--------------------------------------------------------------------------------------------------------#
# General and/or miscellaneous options.
##########################################################################################################

_general {
    # If true, the mod will start up in debug mode.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=false ]
    B:_debug_mode=false

    # Chance for an entity on the depacify list to spawn aggressive, instead of just neutral.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.0 ]
    D:depacify_aggressive_chance=0.0

    # List of passive mobs (by entity id) that are made "neutral" like wolves.
    # You may put a tilde (~) in front of any entity id to make it specific; specific entity ids
    # will not count any entities extending (i.e., based on) the specified entity.
    # Additional number after the entity id is the chance (0.0 to 1.0) for entities of that type to spawn with the AI.
    # May or may not work on mod mobs.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:chicken 1.0, minecraft:cow 1.0, minecraft:pig 1.0, minecraft:sheep 1.0, minecraft:rabbit 1.0, minecraft:squid 1.0 } ]
    S:depacify_list <
        minecraft:chicken 1.0
        minecraft:cow 1.0
        minecraft:pig 1.0
        minecraft:sheep 1.0
        minecraft:rabbit 1.0
        minecraft:squid 1.0
     >

    # If true, passive mobs will seek out and eat the items used to breed them laying on the floor.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:eat_breeding_items=true

    # If true, when mobs eat breeding items off the floor, they will regain health like wolves.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:eating_heals=true
}


##########################################################################################################
# door_breaking
#--------------------------------------------------------------------------------------------------------#
# Options to customize monsters' door-breaking behavior.
##########################################################################################################

door_breaking {
    # If true, mobs will destroy doors that are blocking their path.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:_enabled=true

    # The block breaking speed multiplier for mobs, relative to the player's block breaking speed.
    #    >> Float:[ Range={ 0.0, Infinity }, Default=0.33 ]
    D:break_speed=0.33

    # If true, broken blocks will leave item drops.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:leave_drops=true

    # If true, creepers will be very mad about not having arms to break things with, and resort to what they know best...
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:mad_creepers=true

    # List of mobs that can gain door-breaking AI (note that the entity must have task-based AI enabled).
    # The number after each mob is the chance for that mob type to get the AI, from 0 to 1.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:zombie 1.0, minecraft:creeper 1.0, minecraft:zombie_pigman 1.0 } ]
    S:mob_list <
        minecraft:zombie 1.0
        minecraft:creeper 1.0
        minecraft:zombie_pigman 1.0
     >

    # If true, mobs will only break doors while they are chasing an attack target.
    # Setting this to false typically leads to mobs smashing into your house to get to blocks they are targeting
    # as part of an idle griefing or fiddling behavior, such as torches or chests.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:requires_target=true

    # If true, mobs will only target blocks they have the tools to harvest.
    # For example, they will only break iron doors with a pickaxe.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:requires_tools=true

    # Door blocks that can be broken by mobs chasing you.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:wooden_door, minecraft:iron_door, minecraft:trapdoor, minecraft:fence_gate, minecraft:iron_trapdoor, minecraft:spruce_fence_gate, minecraft:birch_fence_gate, minecraft:jungle_fence_gate, minecraft:dark_oak_fence_gate, minecraft:acacia_fence_gate, minecraft:spruce_door, minecraft:birch_door, minecraft:jungle_door, minecraft:acacia_door, minecraft:dark_oak_door, forestry:fence.gates.larch, forestry:fence.gates.fireproof.larch, forestry:fence.gates.teak, forestry:fence.gates.fireproof.teak, forestry:fence.gates.acacia, forestry:fence.gates.fireproof.acacia, forestry:fence.gates.lime, forestry:fence.gates.fireproof.lime, forestry:fence.gates.chestnut, forestry:fence.gates.fireproof.chestnut, forestry:fence.gates.wenge, forestry:fence.gates.fireproof.wenge, forestry:fence.gates.baobab, forestry:fence.gates.fireproof.baobab, forestry:fence.gates.sequoia, forestry:fence.gates.fireproof.sequoia, forestry:fence.gates.kapok, forestry:fence.gates.fireproof.kapok, forestry:fence.gates.ebony, forestry:fence.gates.fireproof.ebony, forestry:fence.gates.mahogany, forestry:fence.gates.fireproof.mahogany, forestry:fence.gates.balsa, forestry:fence.gates.fireproof.balsa, forestry:fence.gates.willow, forestry:fence.gates.fireproof.willow, forestry:fence.gates.walnut, forestry:fence.gates.fireproof.walnut, forestry:fence.gates.greenheart, forestry:fence.gates.fireproof.greenheart, forestry:fence.gates.cherry, forestry:fence.gates.fireproof.cherry, forestry:fence.gates.mahoe, forestry:fence.gates.fireproof.mahoe, forestry:fence.gates.poplar, forestry:fence.gates.fireproof.poplar, forestry:fence.gates.palm, forestry:fence.gates.fireproof.palm, forestry:fence.gates.papaya, forestry:fence.gates.fireproof.papaya, forestry:fence.gates.pine, forestry:fence.gates.fireproof.pine, forestry:fence.gates.plum, forestry:fence.gates.fireproof.plum, forestry:fence.gates.maple, forestry:fence.gates.fireproof.maple, forestry:fence.gates.citrus, forestry:fence.gates.fireproof.citrus, forestry:fence.gates.giganteum, forestry:fence.gates.fireproof.giganteum, forestry:fence.gates.ipe, forestry:fence.gates.fireproof.ipe, forestry:fence.gates.padauk, forestry:fence.gates.fireproof.padauk, forestry:fence.gates.cocobolo, forestry:fence.gates.fireproof.cocobolo, forestry:fence.gates.zebrawood, forestry:fence.gates.fireproof.zebrawood, forestry:fence.gates.vanilla.fireproof.oak, forestry:fence.gates.vanilla.fireproof.spruce, forestry:fence.gates.vanilla.fireproof.birch, forestry:fence.gates.vanilla.fireproof.jungle, forestry:fence.gates.vanilla.fireproof.acacia, forestry:fence.gates.vanilla.fireproof.dark_oak, forestry:doors.larch, forestry:doors.teak, forestry:doors.acacia, forestry:doors.lime, forestry:doors.chestnut, forestry:doors.wenge, forestry:doors.baobab, forestry:doors.sequoia, forestry:doors.kapok, forestry:doors.ebony, forestry:doors.mahogany, forestry:doors.balsa, forestry:doors.willow, forestry:doors.walnut, forestry:doors.greenheart, forestry:doors.cherry, forestry:doors.mahoe, forestry:doors.poplar, forestry:doors.palm, forestry:doors.papaya, forestry:doors.pine, forestry:doors.plum, forestry:doors.maple, forestry:doors.citrus, forestry:doors.giganteum, forestry:doors.ipe, forestry:doors.padauk, forestry:doors.cocobolo, forestry:doors.zebrawood, extratrees:fence.gates.fir, extratrees:fence.gates.fireproof.fir, extratrees:fence.gates.cedar, extratrees:fence.gates.fireproof.cedar, extratrees:fence.gates.hemlock, extratrees:fence.gates.fireproof.hemlock, extratrees:fence.gates.cypress, extratrees:fence.gates.fireproof.cypress, extratrees:fence.gates.fig, extratrees:fence.gates.fireproof.fig, extratrees:fence.gates.beech, extratrees:fence.gates.fireproof.beech, extratrees:fence.gates.alder, extratrees:fence.gates.fireproof.alder, extratrees:fence.gates.hazel, extratrees:fence.gates.fireproof.hazel, extratrees:fence.gates.hornbeam, extratrees:fence.gates.fireproof.hornbeam, extratrees:fence.gates.box, extratrees:fence.gates.fireproof.box, extratrees:fence.gates.butternut, extratrees:fence.gates.fireproof.butternut, extratrees:fence.gates.hickory, extratrees:fence.gates.fireproof.hickory, extratrees:fence.gates.whitebeam, extratrees:fence.gates.fireproof.whitebeam, extratrees:fence.gates.elm, extratrees:fence.gates.fireproof.elm, extratrees:fence.gates.apple, extratrees:fence.gates.fireproof.apple, extratrees:fence.gates.yew, extratrees:fence.gates.fireproof.yew, extratrees:fence.gates.pear, extratrees:fence.gates.fireproof.pear, extratrees:fence.gates.hawthorn, extratrees:fence.gates.fireproof.hawthorn, extratrees:fence.gates.rowan, extratrees:fence.gates.fireproof.rowan, extratrees:fence.gates.elder, extratrees:fence.gates.fireproof.elder, extratrees:fence.gates.maclura, extratrees:fence.gates.fireproof.maclura, extratrees:fence.gates.syzgium, extratrees:fence.gates.fireproof.syzgium, extratrees:fence.gates.brazilwood, extratrees:fence.gates.fireproof.brazilwood, extratrees:fence.gates.logwood, extratrees:fence.gates.fireproof.logwood, extratrees:fence.gates.iroko, extratrees:fence.gates.fireproof.iroko, extratrees:fence.gates.locust, extratrees:fence.gates.fireproof.locust, extratrees:fence.gates.eucalyptus, extratrees:fence.gates.fireproof.eucalyptus, extratrees:fence.gates.purpleheart, extratrees:fence.gates.fireproof.purpleheart, extratrees:fence.gates.ash, extratrees:fence.gates.fireproof.ash, extratrees:fence.gates.holly, extratrees:fence.gates.fireproof.holly, extratrees:fence.gates.olive, extratrees:fence.gates.fireproof.olive, extratrees:fence.gates.sweetgum, extratrees:fence.gates.fireproof.sweetgum, extratrees:fence.gates.rosewood, extratrees:fence.gates.fireproof.rosewood, extratrees:fence.gates.gingko, extratrees:fence.gates.fireproof.gingko, extratrees:fence.gates.pinkivory, extratrees:fence.gates.fireproof.pinkivory, extratrees:fence.gates.banana, extratrees:fence.gates.fireproof.banana, extratrees:doors.apple, extratrees:doors.fig, extratrees:doors.butternut, extratrees:doors.whitebeam, extratrees:doors.rowan, extratrees:doors.hemlock, extratrees:doors.ash, extratrees:doors.alder, extratrees:doors.beech, extratrees:doors.hawthorn, extratrees:doors.banana, extratrees:doors.yew, extratrees:doors.cypress, extratrees:doors.fir, extratrees:doors.hazel, extratrees:doors.hickory, extratrees:doors.elm, extratrees:doors.elder, extratrees:doors.holly, extratrees:doors.hornbeam, extratrees:doors.cedar, extratrees:doors.olive, extratrees:doors.sweetgum, extratrees:doors.locust, extratrees:doors.pear, extratrees:doors.maclura, extratrees:doors.brazilwood, extratrees:doors.logwood, extratrees:doors.rosewood, extratrees:doors.purpleheart, extratrees:doors.iroko, extratrees:doors.gingko, extratrees:doors.eucalyptus, extratrees:doors.box, extratrees:doors.syzgium, extratrees:doors.pinkivory, malisisdoors:wood_sliding_door, malisisdoors:iron_sliding_door, malisisdoors:jail_door, malisisdoors:laboratory_door, malisisdoors:factory_door, malisisdoors:shoji_door, malisisdoors:curtain_white, malisisdoors:curtain_orange, malisisdoors:curtain_magenta, malisisdoors:curtain_light_blue, malisisdoors:curtain_yellow, malisisdoors:curtain_lime, malisisdoors:curtain_pink, malisisdoors:curtain_gray, malisisdoors:curtain_silver, malisisdoors:curtain_cyan, malisisdoors:curtain_purple, malisisdoors:curtain_blue, malisisdoors:curtain_brown, malisisdoors:curtain_green, malisisdoors:curtain_red, malisisdoors:curtain_black, malisisdoors:customdoor, malisisdoors:saloon, malisisdoors:sliding_trapdoor, malisisdoors:trapdoor_acacia, malisisdoors:trapdoor_birch, malisisdoors:trapdoor_dark_oak, malisisdoors:trapdoor_jungle, malisisdoors:trapdoor_spruce, malisisdoors:camofencegate, malisisdoors:verticalhatch, enderio:block_dark_steel_trapdoor, enderio:block_dark_steel_door, enderio:block_painted_fence_gate, enderio:block_painted_wooden_trapdoor, enderio:block_painted_iron_trapdoor, enderio:block_painted_dark_steel_trapdoor, enderio:block_painted_wooden_door, enderio:block_painted_iron_door, enderio:block_painted_dark_steel_door, natura:overworld_door_eucalyptus, natura:overworld_door_hopseed, natura:overworld_door_sakura, natura:overworld_door_redwood, natura:overworld_door_redwood_bark, natura:overworld_door_tiger, natura:overworld_door_maple, natura:overworld_door_silverbell, natura:nether_door_ghostwood, natura:nether_door_bloodwood, natura:nether_door_darkwood, natura:nether_door_fusewood, natura:maple_trap_door, natura:maple_fence_gate, natura:silverbell_trap_door, natura:silverbell_fence_gate, natura:amaranth_trap_door, natura:amaranth_fence_gate, natura:tiger_trap_door, natura:tiger_fence_gate, natura:willow_trap_door, natura:willow_fence_gate, natura:eucalyptus_trap_door, natura:eucalyptus_fence_gate, natura:hopseed_trap_door, natura:hopseed_fence_gate, natura:sakura_trap_door, natura:sakura_fence_gate, natura:redwood_trap_door, natura:redwood_fence_gate, natura:ghostwood_trap_door, natura:ghostwood_fence_gate, natura:bloodwood_trap_door, natura:bloodwood_fence_gate, natura:fusewood_trap_door, natura:fusewood_fence_gate, natura:darkwood_trap_door, natura:darkwood_fence_gate, integrateddynamics:menril_door, techguns:bunkerdoor } ]
    S:target_blocks <
        minecraft:wooden_door
        minecraft:iron_door
        minecraft:trapdoor
        minecraft:fence_gate
        minecraft:iron_trapdoor
        minecraft:spruce_fence_gate
        minecraft:birch_fence_gate
        minecraft:jungle_fence_gate
        minecraft:dark_oak_fence_gate
        minecraft:acacia_fence_gate
        minecraft:spruce_door
        minecraft:birch_door
        minecraft:jungle_door
        minecraft:acacia_door
        minecraft:dark_oak_door
        integrateddynamics:menril_door
        techguns:bunkerdoor
     >
}


##########################################################################################################
# elite_ai
#--------------------------------------------------------------------------------------------------------#
# Options to control the types of elite AI and their weighted chances of occurring.
##########################################################################################################

elite_ai {
    # List of mobs that can gain special AI patterns and their chances to gain those patterns.
    # You can specify multiple chances for each entity - each chance will be rolled and multiple AIs can stack.
    # Note that the entity must have task-based AI enabled.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:zombie 0.05 0.05, minecraft:skeleton 0.2 0.05, minecraft:zombie_pigman 0.1 0.05 0.02 } ]
    S:_mob_list <
        minecraft:zombie 0.05 0.05
        minecraft:skeleton 0.2 0.05
        minecraft:zombie_pigman 0.1 0.05 0.02
     >

    # Weight for the barrage ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_barrage=1

    # Weight for the charge ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_charge=1

    # Weight for the jump ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_jump=1

    # Weight for the leap ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_leap=1

    # Weight for the shaman ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_shaman=1

    # Weight for the spawner ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_spawner=1

    # Weight for the sprint ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_sprint=1

    # Weight for the thief ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_thief=1

    # Weight for the throw ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_throw=1

    # Weight for the throw_player ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_throw_player=1

    # Flat health increase added to mobs with barrage ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=20.0 ]
    D:barrage_health_boost=20.0

    # Flat health increase added to mobs with charge ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=20.0 ]
    D:charge_health_boost=20.0

    # Knockback resistance added to mobs with charge ai.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.5 ]
    D:charge_knockback_resistance=0.5

    # Speed increase multiplier to mobs with leap ai. Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=0.1 ]
    D:leap_speed_boost=0.1

    # Amount (in half-hearts) healed by mobs with shaman ai every 2 seconds. Can be overridden by the mob's nbt data.
    #    >> Float:[ Range={ -Infinity, Infinity }, Default=1.0 ]
    D:shaman_heal_amount=1.0

    # Flat health increase added to mobs with shaman ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=20.0 ]
    D:shaman_health_boost=20.0

    # Flat health increase added to mobs with spawner ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=40.0 ]
    D:spawner_health_boost=40.0

    # Speed increase multiplier to mobs with spawner ai. Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=-0.2 ]
    D:spawner_speed_boost=-0.2

    # Speed increase multiplier to the boots worn by mobs with sprint ai (these can drop as loot!).
    # Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ 0.0, Infinity }, Default=0.1 ]
    D:sprint_boots_speed_boost=0.1

    # Speed increase multiplier to mobs with sprint ai while they are sprinting. Can be overridden by the mob's nbt data.
    # Setting this to 0 breaks the sprint ai, so don't do that.
    #    >> Float:[ Range={ 0.0, Infinity }, Default=0.7 ]
    D:sprint_speed_boost=0.7

    # The minimum distance that mobs with thief ai will try to keep from players once they have stolen an item.
    # Can be overridden by the mob's nbt data.
    #    >> Float:[ Range={ 1.0, Infinity }, Default=16.0 ]
    D:thief_avoid_range=16.0

    # Speed increase multiplier to the helmet worn by mobs with thief ai (these can drop as loot!).
    # Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ 0.0, Infinity }, Default=0.1 ]
    D:thief_helmet_speed_boost=0.1

    # Flat health increase added to mobs with throw-player ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=20.0 ]
    D:throw_player_health_boost=20.0

    # Flat damage increase added to the helmet worn by mobs with throw-player ai (these can drop as loot!).
    #    >> Double:[ Range={ 0.0, Infinity }, Default=1.0 ]
    D:throw_player_helmet_damage_boost=1.0

    # Knockback resistance added to mobs with throw-player ai.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.5 ]
    D:throw_player_knockback_resistance=0.5

    # Speed increase multiplier to mobs with throw ai. Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=0.1 ]
    D:throw_speed_boost=0.1
}


##########################################################################################################
# idle_activities
#--------------------------------------------------------------------------------------------------------#
# Options to customize all idle behaviors for monsters (fiddling/griefing).
##########################################################################################################

idle_activities {
    # The range at which mobs will search for blocks to target horizontally (xz-plane).
    #    >> Integer:[ Range={ 1, 2147483647 }, Default=12 ]
    I:range=12

    # The range at which mobs will search for blocks to target vertically (y-axis).
    #    >> Integer:[ Range={ 1, 2147483647 }, Default=6 ]
    I:range_vertical=6

    # Mobs' reach (from eye height) when targeting blocks. Player reach is about 4.5.
    #    >> Float:[ Range={ 0.0, Infinity }, Default=3.5 ]
    D:reach=3.5

    # The number of blocks each mob randomly searches to grief/fiddle with every "scan_delay" ticks.
    #    >> Integer:[ Range={ 1, 2147483647 }, Default=32 ]
    I:scan_count=32

    # The maximum number of blocks that can be searched in any given tick by all mobs. 0 is no limit.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=0 ]
    I:scan_count_global=0

    # The number of ticks between each block scan.
    #    >> Integer:[ Range={ 1, 2147483647 }, Default=2 ]
    I:scan_delay=2
}


##########################################################################################################
# idle_fiddling
#--------------------------------------------------------------------------------------------------------#
# Options to customize monsters' idle fiddling behavior.
##########################################################################################################

idle_fiddling {
    # If true, mobs will flip switches, press buttons, etc. while not doing anything else.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:_enabled=true

    # List of mobs that can gain idle fiddling AI (note that the entity must have task-based AI enabled).
    # The number after each mob is the chance for that mob type to get the AI, from 0 to 1.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:skeleton 1.0, minecraft:zombie_pigman 1.0 } ]
    S:mob_list <
        minecraft:skeleton 1.0
        minecraft:zombie_pigman 1.0
     >

    # Specific blocks that will NOT be fiddled with by mobs.
    # Only really useful if you whitelist an entire namespace (*) to prevent mobs from fiddling with a few blocks from that namespace.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={  } ]
    S:target_blacklist <
     >

    # Specific blocks that will be fiddled with by mobs.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:tnt, minecraft:wooden_door, minecraft:lever, minecraft:stone_button, minecraft:cake, minecraft:unpowered_repeater, minecraft:powered_repeater, minecraft:fence_gate, minecraft:wooden_button, minecraft:unpowered_comparator, minecraft:powered_comparator, minecraft:spruce_fence_gate, minecraft:birch_fence_gate, minecraft:jungle_fence_gate, minecraft:dark_oak_fence_gate, minecraft:acacia_fence_gate, minecraft:spruce_door, minecraft:birch_door, minecraft:jungle_door, minecraft:acacia_door, minecraft:dark_oak_door, forestry:fence.gates.larch, forestry:fence.gates.fireproof.larch, forestry:fence.gates.teak, forestry:fence.gates.fireproof.teak, forestry:fence.gates.acacia, forestry:fence.gates.fireproof.acacia, forestry:fence.gates.lime, forestry:fence.gates.fireproof.lime, forestry:fence.gates.chestnut, forestry:fence.gates.fireproof.chestnut, forestry:fence.gates.wenge, forestry:fence.gates.fireproof.wenge, forestry:fence.gates.baobab, forestry:fence.gates.fireproof.baobab, forestry:fence.gates.sequoia, forestry:fence.gates.fireproof.sequoia, forestry:fence.gates.kapok, forestry:fence.gates.fireproof.kapok, forestry:fence.gates.ebony, forestry:fence.gates.fireproof.ebony, forestry:fence.gates.mahogany, forestry:fence.gates.fireproof.mahogany, forestry:fence.gates.balsa, forestry:fence.gates.fireproof.balsa, forestry:fence.gates.willow, forestry:fence.gates.fireproof.willow, forestry:fence.gates.walnut, forestry:fence.gates.fireproof.walnut, forestry:fence.gates.greenheart, forestry:fence.gates.fireproof.greenheart, forestry:fence.gates.cherry, forestry:fence.gates.fireproof.cherry, forestry:fence.gates.mahoe, forestry:fence.gates.fireproof.mahoe, forestry:fence.gates.poplar, forestry:fence.gates.fireproof.poplar, forestry:fence.gates.palm, forestry:fence.gates.fireproof.palm, forestry:fence.gates.papaya, forestry:fence.gates.fireproof.papaya, forestry:fence.gates.pine, forestry:fence.gates.fireproof.pine, forestry:fence.gates.plum, forestry:fence.gates.fireproof.plum, forestry:fence.gates.maple, forestry:fence.gates.fireproof.maple, forestry:fence.gates.citrus, forestry:fence.gates.fireproof.citrus, forestry:fence.gates.giganteum, forestry:fence.gates.fireproof.giganteum, forestry:fence.gates.ipe, forestry:fence.gates.fireproof.ipe, forestry:fence.gates.padauk, forestry:fence.gates.fireproof.padauk, forestry:fence.gates.cocobolo, forestry:fence.gates.fireproof.cocobolo, forestry:fence.gates.zebrawood, forestry:fence.gates.fireproof.zebrawood, forestry:fence.gates.vanilla.fireproof.oak, forestry:fence.gates.vanilla.fireproof.spruce, forestry:fence.gates.vanilla.fireproof.birch, forestry:fence.gates.vanilla.fireproof.jungle, forestry:fence.gates.vanilla.fireproof.acacia, forestry:fence.gates.vanilla.fireproof.dark_oak, forestry:doors.larch, forestry:doors.teak, forestry:doors.acacia, forestry:doors.lime, forestry:doors.chestnut, forestry:doors.wenge, forestry:doors.baobab, forestry:doors.sequoia, forestry:doors.kapok, forestry:doors.ebony, forestry:doors.mahogany, forestry:doors.balsa, forestry:doors.willow, forestry:doors.walnut, forestry:doors.greenheart, forestry:doors.cherry, forestry:doors.mahoe, forestry:doors.poplar, forestry:doors.palm, forestry:doors.papaya, forestry:doors.pine, forestry:doors.plum, forestry:doors.maple, forestry:doors.citrus, forestry:doors.giganteum, forestry:doors.ipe, forestry:doors.padauk, forestry:doors.cocobolo, forestry:doors.zebrawood, extratrees:fence.gates.fir, extratrees:fence.gates.fireproof.fir, extratrees:fence.gates.cedar, extratrees:fence.gates.fireproof.cedar, extratrees:fence.gates.hemlock, extratrees:fence.gates.fireproof.hemlock, extratrees:fence.gates.cypress, extratrees:fence.gates.fireproof.cypress, extratrees:fence.gates.fig, extratrees:fence.gates.fireproof.fig, extratrees:fence.gates.beech, extratrees:fence.gates.fireproof.beech, extratrees:fence.gates.alder, extratrees:fence.gates.fireproof.alder, extratrees:fence.gates.hazel, extratrees:fence.gates.fireproof.hazel, extratrees:fence.gates.hornbeam, extratrees:fence.gates.fireproof.hornbeam, extratrees:fence.gates.box, extratrees:fence.gates.fireproof.box, extratrees:fence.gates.butternut, extratrees:fence.gates.fireproof.butternut, extratrees:fence.gates.hickory, extratrees:fence.gates.fireproof.hickory, extratrees:fence.gates.whitebeam, extratrees:fence.gates.fireproof.whitebeam, extratrees:fence.gates.elm, extratrees:fence.gates.fireproof.elm, extratrees:fence.gates.apple, extratrees:fence.gates.fireproof.apple, extratrees:fence.gates.yew, extratrees:fence.gates.fireproof.yew, extratrees:fence.gates.pear, extratrees:fence.gates.fireproof.pear, extratrees:fence.gates.hawthorn, extratrees:fence.gates.fireproof.hawthorn, extratrees:fence.gates.rowan, extratrees:fence.gates.fireproof.rowan, extratrees:fence.gates.elder, extratrees:fence.gates.fireproof.elder, extratrees:fence.gates.maclura, extratrees:fence.gates.fireproof.maclura, extratrees:fence.gates.syzgium, extratrees:fence.gates.fireproof.syzgium, extratrees:fence.gates.brazilwood, extratrees:fence.gates.fireproof.brazilwood, extratrees:fence.gates.logwood, extratrees:fence.gates.fireproof.logwood, extratrees:fence.gates.iroko, extratrees:fence.gates.fireproof.iroko, extratrees:fence.gates.locust, extratrees:fence.gates.fireproof.locust, extratrees:fence.gates.eucalyptus, extratrees:fence.gates.fireproof.eucalyptus, extratrees:fence.gates.purpleheart, extratrees:fence.gates.fireproof.purpleheart, extratrees:fence.gates.ash, extratrees:fence.gates.fireproof.ash, extratrees:fence.gates.holly, extratrees:fence.gates.fireproof.holly, extratrees:fence.gates.olive, extratrees:fence.gates.fireproof.olive, extratrees:fence.gates.sweetgum, extratrees:fence.gates.fireproof.sweetgum, extratrees:fence.gates.rosewood, extratrees:fence.gates.fireproof.rosewood, extratrees:fence.gates.gingko, extratrees:fence.gates.fireproof.gingko, extratrees:fence.gates.pinkivory, extratrees:fence.gates.fireproof.pinkivory, extratrees:fence.gates.banana, extratrees:fence.gates.fireproof.banana, extratrees:doors.apple, extratrees:doors.fig, extratrees:doors.butternut, extratrees:doors.whitebeam, extratrees:doors.rowan, extratrees:doors.hemlock, extratrees:doors.ash, extratrees:doors.alder, extratrees:doors.beech, extratrees:doors.hawthorn, extratrees:doors.banana, extratrees:doors.yew, extratrees:doors.cypress, extratrees:doors.fir, extratrees:doors.hazel, extratrees:doors.hickory, extratrees:doors.elm, extratrees:doors.elder, extratrees:doors.holly, extratrees:doors.hornbeam, extratrees:doors.cedar, extratrees:doors.olive, extratrees:doors.sweetgum, extratrees:doors.locust, extratrees:doors.pear, extratrees:doors.maclura, extratrees:doors.brazilwood, extratrees:doors.logwood, extratrees:doors.rosewood, extratrees:doors.purpleheart, extratrees:doors.iroko, extratrees:doors.gingko, extratrees:doors.eucalyptus, extratrees:doors.box, extratrees:doors.syzgium, extratrees:doors.pinkivory, malisisdoors:wood_sliding_door, malisisdoors:shoji_door, malisisdoors:curtain_white, malisisdoors:curtain_orange, malisisdoors:curtain_magenta, malisisdoors:curtain_light_blue, malisisdoors:curtain_yellow, malisisdoors:curtain_lime, malisisdoors:curtain_pink, malisisdoors:curtain_gray, malisisdoors:curtain_silver, malisisdoors:curtain_cyan, malisisdoors:curtain_purple, malisisdoors:curtain_blue, malisisdoors:curtain_brown, malisisdoors:curtain_green, malisisdoors:curtain_red, malisisdoors:curtain_black, malisisdoors:customdoor, malisisdoors:saloon, malisisdoors:camofencegate, enderio:block_self_resetting_lever5, enderio:block_self_resetting_lever10, enderio:block_self_resetting_lever30, enderio:block_self_resetting_lever60, enderio:block_self_resetting_lever300, enderio:block_self_resetting_lever5i, enderio:block_self_resetting_lever10i, enderio:block_self_resetting_lever30i, enderio:block_self_resetting_lever60i, enderio:block_self_resetting_lever300i, enderio:block_painted_fence_gate, enderio:block_painted_wooden_door, natura:overworld_door_eucalyptus, natura:overworld_door_hopseed, natura:overworld_door_sakura, natura:overworld_door_redwood, natura:overworld_door_redwood_bark, natura:overworld_door_tiger, natura:overworld_door_maple, natura:overworld_door_silverbell, natura:nether_door_ghostwood, natura:nether_door_bloodwood, natura:nether_door_darkwood, natura:nether_door_fusewood, natura:nether_lever, natura:nether_button, natura:maple_button, natura:maple_fence_gate, natura:silverbell_button, natura:silverbell_fence_gate, natura:amaranth_button, natura:amaranth_fence_gate, natura:tiger_button, natura:tiger_fence_gate, natura:willow_button, natura:willow_fence_gate, natura:eucalyptus_button, natura:eucalyptus_fence_gate, natura:hopseed_button, natura:hopseed_fence_gate, natura:sakura_button, natura:sakura_fence_gate, natura:redwood_button, natura:redwood_fence_gate, natura:ghostwood_button, natura:ghostwood_fence_gate, natura:bloodwood_button, natura:bloodwood_fence_gate, natura:fusewood_button, natura:fusewood_fence_gate, natura:darkwood_button, natura:darkwood_fence_gate, integrateddynamics:menril_door, embers:caminite_lever } ]
    S:target_blocks <
        minecraft:tnt
        minecraft:wooden_door
        minecraft:lever
        minecraft:stone_button
        minecraft:cake
        minecraft:unpowered_repeater
        minecraft:powered_repeater
        minecraft:fence_gate
        minecraft:wooden_button
        minecraft:unpowered_comparator
        minecraft:powered_comparator
        minecraft:spruce_fence_gate
        minecraft:birch_fence_gate
        minecraft:jungle_fence_gate
        minecraft:dark_oak_fence_gate
        minecraft:acacia_fence_gate
        minecraft:spruce_door
        minecraft:birch_door
        minecraft:jungle_door
        minecraft:acacia_door
        minecraft:dark_oak_door
        integrateddynamics:menril_door
     >
}


##########################################################################################################
# idle_griefing
#--------------------------------------------------------------------------------------------------------#
# Options to customize monsters' idle block breaking.
##########################################################################################################

idle_griefing {
    # If true, mobs will destroy blocks while not doing anything else.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:_enabled=true

    # If true, block breaking AI will automatically target all light sources (light value > 1).
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:break_lights=true

    # If true, a lound snapping sound (the vanilla door break sound) will be played when a block
    # is broken, which is audible regardless of distance.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=false ]
    B:break_sound=false

    # The block breaking speed multiplier for mobs, relative to the player's block breaking speed.
    #    >> Float:[ Range={ 0.0, Infinity }, Default=0.5 ]
    D:break_speed=0.5

    # If true, griefed blocks will leave item drops.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:leave_drops=true

    # If true, creepers will be very mad about not having arms to break things with, and resort to what they know best...
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:mad_creepers=true

    # List of mobs that can gain passive griefing AI (note that the entity must have task-based AI enabled).
    # The number after each mob is the chance for that mob type to get the AI, from 0 to 1.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:zombie 1.0, minecraft:creeper 1.0, minecraft:zombie_pigman 1.0 } ]
    S:mob_list <
        minecraft:zombie 1.0
        minecraft:creeper 1.0
        minecraft:zombie_pigman 1.0
     >

    # If true, mobs will only target blocks they have the tools to harvest.
    # For example, they will only break stone with a pickaxe.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=false ]
    B:requires_tools=false

    # Specific blocks that will NOT be griefed by mobs.
    # Only really useful if "break_lights" is enabled or when you whitelist an entire namespace (*) to create safe
    # light sources, prevent mobs from breaking normal world gen that produces light, or for removing a few blocks
    # from a namespace that you don't want mobs to break.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={  } ]
    S:target_blacklist <
     >

    # Specific blocks that will be griefed by mobs.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:bed, minecraft:golden_rail, minecraft:crafting_table, minecraft:farmland, minecraft:furnace, minecraft:lit_furnace, minecraft:ladder, minecraft:enchanting_table, minecraft:brewing_stand, enderio:block_dark_steel_ladder, enderio:block_painted_workbench, tconstruct:stone_ladder, engineersdecor:metal_rung_ladder, engineersdecor:metal_rung_steps, engineersdecor:treated_wood_ladder, techguns:slimyladder } ]
    S:target_blocks <
        minecraft:bed
        minecraft:golden_rail
        minecraft:crafting_table
        minecraft:farmland
        minecraft:furnace
        minecraft:lit_furnace
        minecraft:ladder
        minecraft:enchanting_table
        minecraft:brewing_stand
        techguns:slimyladder
     >

    # Specific lootable blocks that will be griefed by mobs.
    # Unlike the normal "target_blocks", these blocks will not be targeted if they still have a loot table tag
    # (e.g., unopened dungeon chests).
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:chest, minecraft:trapped_chest } ]
    S:target_lootable <
        minecraft:chest
        minecraft:trapped_chest
     >
}


##########################################################################################################
# jockeys
#--------------------------------------------------------------------------------------------------------#
# Options relating to which mobs should act as riders or mounts.
##########################################################################################################

jockeys {
    # List of mobs that can be ridden on by normal-sized riders (not all entities can be controlled by their rider).
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:spider, minecraft:slime, minecraft:pig, minecraft:sheep, minecraft:cow, minecraft:polar_bear } ]
    S:mount_list <
        minecraft:spider
        minecraft:slime
        minecraft:pig
        minecraft:sheep
        minecraft:cow
        minecraft:polar_bear
     >

    # List of mobs that can be ridden on by small riders or normal-sized riders that are babies(not all entities can be controlled by their rider).
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:chicken, minecraft:rabbit } ]
    S:mount_list_small <
        minecraft:chicken
        minecraft:rabbit
     >

    # List of mobs that can ride normal-sized mounts and the chance for them to gain the rider AI.
    # Note that the entity must have task-based AI enabled.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:zombie 0.05, minecraft:skeleton 0.1, minecraft:creeper 0.05, minecraft:witch 0.05, minecraft:zombie_pigman 0.1 } ]
    S:rider_list <
        minecraft:zombie 0.05
        minecraft:skeleton 0.1
        minecraft:creeper 0.05
        minecraft:witch 0.05
        minecraft:zombie_pigman 0.1
     >

    # List of mobs that can only ride small mounts or normal-sized mounts that are babies and the chance for them to gain the rider AI.
    # Note that the entity must have task-based AI enabled.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={  } ]
    S:rider_list_small <
     >
}


##########################################################################################################
# reaction_ai
#--------------------------------------------------------------------------------------------------------#
# Options to customize reactive behaviors.
##########################################################################################################

reaction_ai {
    # If true, all mobs will try to avoid TNT and creepers that are about to explode.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:avoid_explosions=true

    # If true, all mobs will call for help from nearby mobs of the same type when struck.
    # Note that this does not trigger from killing blows.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:call_for_help=true

    # Chance for mobs to call for help when dealt a killing blow.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.2 ]
    D:call_for_help_on_death=0.2

    # The chance any mob will try to sidestep an arrow fired in their direction.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.4 ]
    D:dodge_arrows=0.4
}


##########################################################################################################
# villages
#--------------------------------------------------------------------------------------------------------#
# Options to control village aggression and reputation.
# For reference, starting reputation is 0, minimum is -30 and maximum is 10.
# You are considered an enemy to a village if your reputation is -15 or lower.
##########################################################################################################

villages {
    # Chance for you to be marked as an aggressor (to be attacked) when you break any block in a village
    # that is not on the "block_blacklist" while your reputation is low enough.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.1 ]
    D:block_aggression_chance=0.1

    # The "block_aggression_chance" and "block_treasured_aggression_chance" only trigger if your reputation
    # in the village is less than or equal to this limit.
    #    >> Integer:[ Range={ -30, 10 }, Default=-5 ]
    I:block_aggression_limit=-5

    # Specific blocks that will NOT anger villagers when broken.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:stone, minecraft:grass, minecraft:dirt, minecraft:sapling, minecraft:sand, minecraft:leaves, minecraft:golden_rail, minecraft:detector_rail, minecraft:web, minecraft:tallgrass, minecraft:deadbush, minecraft:yellow_flower, minecraft:red_flower, minecraft:brown_mushroom, minecraft:red_mushroom, minecraft:tnt, minecraft:redstone_wire, minecraft:wheat, minecraft:wooden_door, minecraft:rail, minecraft:iron_door, minecraft:unlit_redstone_torch, minecraft:snow_layer, minecraft:ice, minecraft:cactus, minecraft:reeds, minecraft:pumpkin, minecraft:lit_pumpkin, minecraft:unpowered_repeater, minecraft:powered_repeater, minecraft:brown_mushroom_block, minecraft:red_mushroom_block, minecraft:melon_block, minecraft:pumpkin_stem, minecraft:melon_stem, minecraft:vine, minecraft:fence_gate, minecraft:mycelium, minecraft:waterlily, minecraft:nether_wart, minecraft:cocoa, minecraft:tripwire_hook, minecraft:tripwire, minecraft:flower_pot, minecraft:carrots, minecraft:potatoes, minecraft:unpowered_comparator, minecraft:activator_rail, minecraft:leaves2, minecraft:slime, minecraft:packed_ice, minecraft:double_plant, minecraft:spruce_fence_gate, minecraft:birch_fence_gate, minecraft:jungle_fence_gate, minecraft:dark_oak_fence_gate, minecraft:acacia_fence_gate, minecraft:spruce_door, minecraft:birch_door, minecraft:jungle_door, minecraft:acacia_door, minecraft:dark_oak_door, minecraft:beetroots, minecraft:frosted_ice, minecraft:structure_void, minecraft:white_shulker_box, minecraft:orange_shulker_box, minecraft:magenta_shulker_box, minecraft:light_blue_shulker_box, minecraft:yellow_shulker_box, minecraft:lime_shulker_box, minecraft:pink_shulker_box, minecraft:gray_shulker_box, minecraft:silver_shulker_box, minecraft:cyan_shulker_box, minecraft:purple_shulker_box, minecraft:blue_shulker_box, minecraft:brown_shulker_box, minecraft:green_shulker_box, minecraft:red_shulker_box, minecraft:black_shulker_box, forestry:fluid.bio.ethanol, forestry:fluid.biomass, forestry:fluid.glass, forestry:fluid.for.honey, forestry:fluid.ice, forestry:fluid.juice, forestry:fluid.milk, forestry:fluid.seed.oil, forestry:fluid.short.mead, forestry:mushroom, forestry:fence.gates.larch, forestry:fence.gates.fireproof.larch, forestry:fence.gates.teak, forestry:fence.gates.fireproof.teak, forestry:fence.gates.acacia, forestry:fence.gates.fireproof.acacia, forestry:fence.gates.lime, forestry:fence.gates.fireproof.lime, forestry:fence.gates.chestnut, forestry:fence.gates.fireproof.chestnut, forestry:fence.gates.wenge, forestry:fence.gates.fireproof.wenge, forestry:fence.gates.baobab, forestry:fence.gates.fireproof.baobab, forestry:fence.gates.sequoia, forestry:fence.gates.fireproof.sequoia, forestry:fence.gates.kapok, forestry:fence.gates.fireproof.kapok, forestry:fence.gates.ebony, forestry:fence.gates.fireproof.ebony, forestry:fence.gates.mahogany, forestry:fence.gates.fireproof.mahogany, forestry:fence.gates.balsa, forestry:fence.gates.fireproof.balsa, forestry:fence.gates.willow, forestry:fence.gates.fireproof.willow, forestry:fence.gates.walnut, forestry:fence.gates.fireproof.walnut, forestry:fence.gates.greenheart, forestry:fence.gates.fireproof.greenheart, forestry:fence.gates.cherry, forestry:fence.gates.fireproof.cherry, forestry:fence.gates.mahoe, forestry:fence.gates.fireproof.mahoe, forestry:fence.gates.poplar, forestry:fence.gates.fireproof.poplar, forestry:fence.gates.palm, forestry:fence.gates.fireproof.palm, forestry:fence.gates.papaya, forestry:fence.gates.fireproof.papaya, forestry:fence.gates.pine, forestry:fence.gates.fireproof.pine, forestry:fence.gates.plum, forestry:fence.gates.fireproof.plum, forestry:fence.gates.maple, forestry:fence.gates.fireproof.maple, forestry:fence.gates.citrus, forestry:fence.gates.fireproof.citrus, forestry:fence.gates.giganteum, forestry:fence.gates.fireproof.giganteum, forestry:fence.gates.ipe, forestry:fence.gates.fireproof.ipe, forestry:fence.gates.padauk, forestry:fence.gates.fireproof.padauk, forestry:fence.gates.cocobolo, forestry:fence.gates.fireproof.cocobolo, forestry:fence.gates.zebrawood, forestry:fence.gates.fireproof.zebrawood, forestry:fence.gates.vanilla.fireproof.oak, forestry:fence.gates.vanilla.fireproof.spruce, forestry:fence.gates.vanilla.fireproof.birch, forestry:fence.gates.vanilla.fireproof.jungle, forestry:fence.gates.vanilla.fireproof.acacia, forestry:fence.gates.vanilla.fireproof.dark_oak, forestry:doors.larch, forestry:doors.teak, forestry:doors.acacia, forestry:doors.lime, forestry:doors.chestnut, forestry:doors.wenge, forestry:doors.baobab, forestry:doors.sequoia, forestry:doors.kapok, forestry:doors.ebony, forestry:doors.mahogany, forestry:doors.balsa, forestry:doors.willow, forestry:doors.walnut, forestry:doors.greenheart, forestry:doors.cherry, forestry:doors.mahoe, forestry:doors.poplar, forestry:doors.palm, forestry:doors.papaya, forestry:doors.pine, forestry:doors.plum, forestry:doors.maple, forestry:doors.citrus, forestry:doors.giganteum, forestry:doors.ipe, forestry:doors.padauk, forestry:doors.cocobolo, forestry:doors.zebrawood, forestry:sapling_ge, forestry:leaves, forestry:leaves.default.0, forestry:leaves.default.1, forestry:leaves.default.2, forestry:leaves.default.3, forestry:leaves.default.4, forestry:leaves.default.5, forestry:leaves.default.6, forestry:leaves.default.7, forestry:leaves.default.8, forestry:leaves.default.fruit.0, forestry:leaves.default.fruit.1, forestry:leaves.decorative.0, forestry:leaves.decorative.1, forestry:leaves.decorative.2, forestry:pods.coconut, forestry:pods.dates, forestry:pods.plantain, forestry:pods.cocoa, forestry:pods.red_banana, forestry:pods.banana, forestry:pods.papaya, forestry:cocoon, forestry:candle, forestry:stump, forestry:ash_block_0, forestry:ash_block_1, forestry:ash_block_2, forestry:ash_block_3, genetics:binnie.growth.medium, genetics:binnie.bacteria, genetics:binnie.bacteria.poly, genetics:binnie.dna.raw, genetics:binnie.bacteria.vector, botany:plant, botany:flower, extrabees:ectoplasm, extratrees:binnie.sap, extratrees:binnie.resin, extratrees:binnie.latex, extratrees:binnie.turpentine, extratrees:hops, extratrees:fence.gates.fir, extratrees:fence.gates.fireproof.fir, extratrees:fence.gates.cedar, extratrees:fence.gates.fireproof.cedar, extratrees:fence.gates.hemlock, extratrees:fence.gates.fireproof.hemlock, extratrees:fence.gates.cypress, extratrees:fence.gates.fireproof.cypress, extratrees:fence.gates.fig, extratrees:fence.gates.fireproof.fig, extratrees:fence.gates.beech, extratrees:fence.gates.fireproof.beech, extratrees:fence.gates.alder, extratrees:fence.gates.fireproof.alder, extratrees:fence.gates.hazel, extratrees:fence.gates.fireproof.hazel, extratrees:fence.gates.hornbeam, extratrees:fence.gates.fireproof.hornbeam, extratrees:fence.gates.box, extratrees:fence.gates.fireproof.box, extratrees:fence.gates.butternut, extratrees:fence.gates.fireproof.butternut, extratrees:fence.gates.hickory, extratrees:fence.gates.fireproof.hickory, extratrees:fence.gates.whitebeam, extratrees:fence.gates.fireproof.whitebeam, extratrees:fence.gates.elm, extratrees:fence.gates.fireproof.elm, extratrees:fence.gates.apple, extratrees:fence.gates.fireproof.apple, extratrees:fence.gates.yew, extratrees:fence.gates.fireproof.yew, extratrees:fence.gates.pear, extratrees:fence.gates.fireproof.pear, extratrees:fence.gates.hawthorn, extratrees:fence.gates.fireproof.hawthorn, extratrees:fence.gates.rowan, extratrees:fence.gates.fireproof.rowan, extratrees:fence.gates.elder, extratrees:fence.gates.fireproof.elder, extratrees:fence.gates.maclura, extratrees:fence.gates.fireproof.maclura, extratrees:fence.gates.syzgium, extratrees:fence.gates.fireproof.syzgium, extratrees:fence.gates.brazilwood, extratrees:fence.gates.fireproof.brazilwood, extratrees:fence.gates.logwood, extratrees:fence.gates.fireproof.logwood, extratrees:fence.gates.iroko, extratrees:fence.gates.fireproof.iroko, extratrees:fence.gates.locust, extratrees:fence.gates.fireproof.locust, extratrees:fence.gates.eucalyptus, extratrees:fence.gates.fireproof.eucalyptus, extratrees:fence.gates.purpleheart, extratrees:fence.gates.fireproof.purpleheart, extratrees:fence.gates.ash, extratrees:fence.gates.fireproof.ash, extratrees:fence.gates.holly, extratrees:fence.gates.fireproof.holly, extratrees:fence.gates.olive, extratrees:fence.gates.fireproof.olive, extratrees:fence.gates.sweetgum, extratrees:fence.gates.fireproof.sweetgum, extratrees:fence.gates.rosewood, extratrees:fence.gates.fireproof.rosewood, extratrees:fence.gates.gingko, extratrees:fence.gates.fireproof.gingko, extratrees:fence.gates.pinkivory, extratrees:fence.gates.fireproof.pinkivory, extratrees:fence.gates.banana, extratrees:fence.gates.fireproof.banana, extratrees:doors.apple, extratrees:doors.fig, extratrees:doors.butternut, extratrees:doors.whitebeam, extratrees:doors.rowan, extratrees:doors.hemlock, extratrees:doors.ash, extratrees:doors.alder, extratrees:doors.beech, extratrees:doors.hawthorn, extratrees:doors.banana, extratrees:doors.yew, extratrees:doors.cypress, extratrees:doors.fir, extratrees:doors.hazel, extratrees:doors.hickory, extratrees:doors.elm, extratrees:doors.elder, extratrees:doors.holly, extratrees:doors.hornbeam, extratrees:doors.cedar, extratrees:doors.olive, extratrees:doors.sweetgum, extratrees:doors.locust, extratrees:doors.pear, extratrees:doors.maclura, extratrees:doors.brazilwood, extratrees:doors.logwood, extratrees:doors.rosewood, extratrees:doors.purpleheart, extratrees:doors.iroko, extratrees:doors.gingko, extratrees:doors.eucalyptus, extratrees:doors.box, extratrees:doors.syzgium, extratrees:doors.pinkivory, extratrees:leaves.default.0, extratrees:leaves.default.1, extratrees:leaves.default.2, extratrees:leaves.default.3, extratrees:leaves.default.4, extratrees:leaves.default.5, extratrees:leaves.default.6, extratrees:leaves.default.7, extratrees:leaves.default.8, extratrees:leaves.default.9, extratrees:leaves.default.10, extratrees:leaves.default.11, extratrees:leaves.default.12, extratrees:leaves.default.13, extratrees:leaves.default.14, extratrees:leaves.default.15, extratrees:leaves.default.16, extratrees:leaves.default.17, extratrees:leaves.default.18, extratrees:leaves.default.19, extratrees:leaves.default.20, extratrees:leaves.default.21, extratrees:leaves.default.22, extratrees:leaves.default.23, extratrees:leaves.default.24, extratrees:leaves.default.fruit.0, extratrees:leaves.default.fruit.1, extratrees:leaves.default.fruit.2, extratrees:leaves.default.fruit.3, extratrees:leaves.default.fruit.4, extratrees:leaves.default.fruit.5, extratrees:leaves.default.fruit.6, extratrees:leaves.default.fruit.7, extratrees:leaves.default.fruit.8, extratrees:leaves.default.fruit.9, extratrees:leaves.default.fruit.10, extratrees:leaves.default.fruit.11, extratrees:leaves.default.fruit.12, extratrees:leaves.default.fruit.13, extratrees:leaves.default.fruit.14, extratrees:leaves.decorative.0, extratrees:leaves.decorative.1, extratrees:leaves.decorative.2, extratrees:leaves.decorative.3, extratrees:leaves.decorative.4, extratrees:leaves.decorative.5, extratrees:leaves.decorative.6, extratrees:binnie.juice.apple, extratrees:binnie.juice.apricot, extratrees:binnie.juice.banana, extratrees:binnie.juice.cherry, extratrees:binnie.juice.elderberry, extratrees:binnie.juice.lemon, extratrees:binnie.juice.lime, extratrees:binnie.juice.orange, extratrees:binnie.juice.peach, extratrees:binnie.juice.plum, extratrees:binnie.juice.carrot, extratrees:binnie.juice.tomato, extratrees:binnie.juice.cranberry, extratrees:binnie.juice.grapefruit, extratrees:binnie.juice.olive, extratrees:binnie.juice.pineapple, extratrees:binnie.juice.pear, extratrees:binnie.juice.white.grape, extratrees:binnie.juice.red.grape, extratrees:binnie.cider.apple, extratrees:binnie.wine.apricot, extratrees:binnie.wine.banana, extratrees:binnie.wine.cherry, extratrees:binnie.wine.elderberry, extratrees:binnie.cider.peach, extratrees:binnie.ciderpear, extratrees:binnie.wine.plum, extratrees:binnie.wine.carrot, extratrees:binnie.wine.white, extratrees:binnie.wine.red, extratrees:binnie.wine.sparkling, extratrees:binnie.wine.agave, extratrees:binnie.fermented.potatoes, extratrees:binnie.wine.citrus, extratrees:binnie.wine.cranberry, extratrees:binnie.wine.pineapple, extratrees:binnie.wine.tomato, extratrees:binnie.juice, extratrees:binnie.beer.ale, extratrees:binnie.beer.lager, extratrees:binnie.beer.wheat, extratrees:binnie.beer.rye, extratrees:binnie.beer.corn, extratrees:binnie.beer.stout, extratrees:binnie.mash.grain, extratrees:binnie.mash.wheat, extratrees:binnie.mash.rye, extratrees:binnie.mash.corn, extratrees:binnie.spirit.neutral, extratrees:binnie.vodka, extratrees:binnie.rum.white, extratrees:binnie.rum.dark, extratrees:binnie.whiskey, extratrees:binnie.whiskey.corn, extratrees:binnie.whiskey.rye, extratrees:binnie.whiskey.wheat, extratrees:binnie.wine.fortified, extratrees:binnie.tequila, extratrees:binnie.brandy.grape, extratrees:binnie.brandy.apple, extratrees:binnie.brandy.pear, extratrees:binnie.brandy.apricot, extratrees:binnie.brandy.plum, extratrees:binnie.brandy.cherry, extratrees:binnie.brandy.elderberry, extratrees:binnie.brandy.citrus, extratrees:binnie.brandy.fruit, extratrees:binnie.spirit.sugarcane, extratrees:binnie.spirit.gin, extratrees:binnie.liquor.apple, extratrees:binnie.liquor.pear, extratrees:binnie.liquor.cherry, extratrees:binnie.liquor.elderberry, extratrees:binnie.liquor.apricot, extratrees:binnie.liquor.fruit, extratrees:binnie.liqueur.almond, extratrees:binnie.liqueur.orange, extratrees:binnie.liqueur.banana, extratrees:binnie.liqueur.chocolate, extratrees:binnie.liqueur.mint, extratrees:binnie.liqueur.hazelnut, extratrees:binnie.liqueur.cinnamon, extratrees:binnie.liqueur.coffee, extratrees:binnie.liqueur.melon, extratrees:binnie.liqueur.anise, extratrees:binnie.liqueur.peach, extratrees:binnie.liqueur.lemon, extratrees:binnie.liqueur.herbal, extratrees:binnie.liqueur.cherry, extratrees:binnie.liqueur.blackcurrant, extratrees:binnie.liqueur.blackberry, extratrees:binnie.liqueur.raspberry, forgemultipartcbe:multipart_block, malisisdoors:wood_sliding_door, malisisdoors:iron_sliding_door, malisisdoors:jail_door, malisisdoors:laboratory_door, malisisdoors:factory_door, malisisdoors:shoji_door, malisisdoors:curtain_white, malisisdoors:curtain_orange, malisisdoors:curtain_magenta, malisisdoors:curtain_light_blue, malisisdoors:curtain_yellow, malisisdoors:curtain_lime, malisisdoors:curtain_pink, malisisdoors:curtain_gray, malisisdoors:curtain_silver, malisisdoors:curtain_cyan, malisisdoors:curtain_purple, malisisdoors:curtain_blue, malisisdoors:curtain_brown, malisisdoors:curtain_green, malisisdoors:curtain_red, malisisdoors:curtain_black, malisisdoors:customdoor, malisisdoors:saloon, malisisdoors:camofencegate, malisisdoors:verticalhatch, malisisdoors:big_door_oak_3x3, malisisdoors:big_door_spruce_3x3, malisisdoors:big_door_birch_3x3, malisisdoors:big_door_jungle_3x3, malisisdoors:big_door_acacia_3x3, malisisdoors:big_door_dark_oak_3x3, malisisdoors:big_door_iron_3x3, malisisdoors:big_door_rusty_3x3, appliedenergistics2:tiny_tnt, enderio:block_machine_io, enderio:block_machine_base, enderio:block_dark_steel_door, enderio:block_confusion_charge, enderio:block_concussion_charge, enderio:block_ender_charge, enderio:block_painted_fence_gate, enderio:block_painted_wooden_door, enderio:block_painted_iron_door, enderio:block_painted_dark_steel_door, enderio:block_painted_packed_ice, enderio:block_painted_packed_ice_solid, enderio:block_exit_rail, enderio:block_fluid_nutrient_distillation, enderio:block_fluid_ender_distillation, enderio:block_fluid_vapor_of_levity, enderio:block_fluid_hootch, enderio:block_fluid_rocket_fuel, enderio:block_fluid_fire_water, enderio:block_fluid_cloud_seed, enderio:block_fluid_cloud_seed_concentrated, natura:overworld_leaves, natura:overworld_leaves2, natura:redwood_leaves, natura:overworld_sapling, natura:overworld_sapling2, natura:redwood_sapling, natura:bluebells_flower, natura:overworld_berrybush_raspberry, natura:overworld_berrybush_blueberry, natura:overworld_berrybush_blackberry, natura:overworld_berrybush_maloberry, natura:barley_crop, natura:cotton_crop, natura:overworld_door_eucalyptus, natura:overworld_door_hopseed, natura:overworld_door_sakura, natura:overworld_door_redwood, natura:overworld_door_redwood_bark, natura:overworld_door_tiger, natura:overworld_door_maple, natura:overworld_door_silverbell, natura:saguaro, natura:saguaro_baby, natura:nether_leaves, natura:nether_leaves2, natura:nether_sapling, natura:nether_sapling2, natura:nether_thorn_vines, natura:nether_berrybush_blightberry, natura:nether_berrybush_duskberry, natura:nether_berrybush_skyberry, natura:nether_berrybush_stingberry, natura:nether_glowshroom, natura:nether_door_ghostwood, natura:nether_door_bloodwood, natura:nether_door_darkwood, natura:nether_door_fusewood, natura:blaze_rail, natura:blaze_rail_golden, natura:blaze_rail_activator, natura:blaze_rail_detector, natura:maple_fence_gate, natura:silverbell_fence_gate, natura:amaranth_fence_gate, natura:tiger_fence_gate, natura:willow_fence_gate, natura:eucalyptus_fence_gate, natura:hopseed_fence_gate, natura:sakura_fence_gate, natura:redwood_fence_gate, natura:ghostwood_fence_gate, natura:bloodwood_fence_gate, natura:fusewood_fence_gate, natura:darkwood_fence_gate, coroutil:blank, tconstruct:slime, tconstruct:slime_grass, tconstruct:slime_leaves, tconstruct:slime_grass_tall, tconstruct:slime_sapling, tconstruct:slime_vine_blue_end, tconstruct:slime_vine_blue_mid, tconstruct:slime_vine_blue, tconstruct:slime_vine_purple_end, tconstruct:slime_vine_purple_mid, tconstruct:slime_vine_purple, tconstruct:wood_rail, tconstruct:wood_rail_trapdoor, tconstruct:slime_channel, tconstruct:molten_iron, tconstruct:molten_pigiron, tconstruct:molten_knightslime, tconstruct:molten_alubrass, tconstruct:molten_cobalt, tconstruct:molten_ardite, tconstruct:molten_manyullyn, tconstruct:molten_copper, tconstruct:molten_bronze, tconstruct:molten_lead, tconstruct:molten_silver, tconstruct:molten_electrum, tconstruct:molten_steel, tconstruct:molten_gold, tconstruct:molten_brass, tconstruct:molten_tin, tconstruct:molten_nickel, tconstruct:molten_zinc, tconstruct:molten_aluminum, tconstruct:molten_stone, tconstruct:molten_obsidian, tconstruct:molten_clay, tconstruct:molten_dirt, tconstruct:molten_emerald, tconstruct:molten_glass, tconstruct:blood, tconstruct:milk, tconstruct:blueslime, tconstruct:purpleslime, immersiveengineering:hemp, immersiveengineering:fake_light, immersiveengineering:fluidcreosote, immersiveengineering:fluidplantoil, immersiveengineering:fluidethanol, immersiveengineering:fluidbiodiesel, immersiveengineering:fluidconcrete, immersiveengineering:molten_uranium, immersiveengineering:molten_constantan, immersiveintelligence:ink, immersiveintelligence:ink_cyan, immersiveintelligence:ink_magenta, immersiveintelligence:ink_yellow, immersiveintelligence:etching_acid, immersiveintelligence:sulfuric_acid, immersiveintelligence:nitric_acid, immersiveintelligence:hydrofluoric_acid, immersiveintelligence:brine, immersiveintelligence:ammonia, immersiveintelligence:methanol, immersiveintelligence:hydrogen, immersiveintelligence:oxygen, immersiveintelligence:chlorine, immersivepetroleum:fluid_crude_oil, immersivepetroleum:fluid_diesel, immersivepetroleum:fluid_lubricant, immersivepetroleum:fluid_gasoline, immersivepetroleum:fluid_napalm, immersivepetroleum:dummy, integrateddynamics:part_audio_reader_block, integrateddynamics:part_block_reader_block, integrateddynamics:part_entity_reader_block, integrateddynamics:part_extradimensional_reader_block, integrateddynamics:part_fluid_reader_block, integrateddynamics:part_inventory_reader_block, integrateddynamics:part_machine_reader_block, integrateddynamics:part_network_reader_block, integrateddynamics:part_redstone_reader_block, integrateddynamics:part_world_reader_block, integrateddynamics:part_audio_writer_block, integrateddynamics:part_effect_writer_block, integrateddynamics:part_entity_writer_block, integrateddynamics:part_machine_writer_block, integrateddynamics:part_inventory_writer_block, integrateddynamics:part_redstone_writer_block, integrateddynamics:part_static_light_panel_block, integrateddynamics:part_dynamic_light_panel_block, integrateddynamics:part_display_panel_block, integrateddynamics:part_connector_mono_directional_block, integrateddynamics:part_connector_omni_directional_block, integrateddynamics:menril_leaves, integrateddynamics:menril_sapling, integrateddynamics:block_menril_resin, integrateddynamics:menril_door, integrateddynamics:block_liquid_chorus, integratedtunnels:part_interface_energy_block, integratedtunnels:part_importer_energy_block, integratedtunnels:part_exporter_energy_block, integratedtunnels:part_importer_world_energy_block, integratedtunnels:part_exporter_world_energy_block, integratedtunnels:part_interface_item_block, integratedtunnels:part_importer_item_block, integratedtunnels:part_exporter_item_block, integratedtunnels:part_importer_world_item_block, integratedtunnels:part_exporter_world_item_block, integratedtunnels:part_interface_fluid_block, integratedtunnels:part_importer_fluid_block, integratedtunnels:part_exporter_fluid_block, integratedtunnels:part_importer_world_fluid_block, integratedtunnels:part_exporter_world_fluid_block, integratedtunnels:part_importer_world_block_block, integratedtunnels:part_exporter_world_block_block, integratedtunnels:part_player_simulator_block, lcrdrfs:crop_creeper_chilli, immersivetech:fluidsteam, immersivetech:fluiddistwater, stevescarts:blockjunction, stevescarts:blockadvdetector, techguns:bunkerdoor, techguns:slimyladder, techguns:block_creeper_acid, actuallyadditions:block_canola_oil, actuallyadditions:block_refined_canola_oil, actuallyadditions:block_crystal_oil, actuallyadditions:block_empowered_oil, actuallyadditions:block_black_lotus, actuallyadditions:block_rice, actuallyadditions:block_canola, actuallyadditions:block_flax, actuallyadditions:block_coffee, actuallyadditions:block_wild, embers:iron, embers:gold, embers:lead, embers:copper, embers:silver, embers:dawnstone, embers:tin, embers:aluminum, embers:nickel, embers:bronze, embers:electrum, embers:alchemical_redstone, rustichromia:cotton_seed, enderio:block_fluid_glowstone, enderio:block_fluid_redstone, enderio:block_fluid_ender, enderio:block_fluid_electrical_steel, enderio:block_fluid_energetic_alloy, enderio:block_fluid_vibrant_alloy, enderio:block_fluid_redstone_alloy, enderio:block_fluid_conductive_iron, enderio:block_fluid_pulsating_iron, enderio:block_fluid_dark_steel, enderio:block_fluid_soularium, enderio:block_fluid_end_steel, enderio:block_fluid_construction_alloy } ]
    S:block_blacklist <
        minecraft:stone
        minecraft:grass
        minecraft:dirt
        minecraft:sapling
        minecraft:sand
        minecraft:leaves
        minecraft:golden_rail
        minecraft:detector_rail
        minecraft:web
        minecraft:tallgrass
        minecraft:deadbush
        minecraft:yellow_flower
        minecraft:red_flower
        minecraft:brown_mushroom
        minecraft:red_mushroom
        minecraft:tnt
        minecraft:redstone_wire
        minecraft:wheat
        minecraft:wooden_door
        minecraft:rail
        minecraft:iron_door
        minecraft:unlit_redstone_torch
        minecraft:snow_layer
        minecraft:ice
        minecraft:cactus
        minecraft:reeds
        minecraft:pumpkin
        minecraft:lit_pumpkin
        minecraft:unpowered_repeater
        minecraft:powered_repeater
        minecraft:brown_mushroom_block
        minecraft:red_mushroom_block
        minecraft:melon_block
        minecraft:pumpkin_stem
        minecraft:melon_stem
        minecraft:vine
        minecraft:fence_gate
        minecraft:mycelium
        minecraft:waterlily
        minecraft:nether_wart
        minecraft:cocoa
        minecraft:tripwire_hook
        minecraft:tripwire
        minecraft:flower_pot
        minecraft:carrots
        minecraft:potatoes
        minecraft:unpowered_comparator
        minecraft:activator_rail
        minecraft:leaves2
        minecraft:slime
        minecraft:packed_ice
        minecraft:double_plant
        minecraft:spruce_fence_gate
        minecraft:birch_fence_gate
        minecraft:jungle_fence_gate
        minecraft:dark_oak_fence_gate
        minecraft:acacia_fence_gate
        minecraft:spruce_door
        minecraft:birch_door
        minecraft:jungle_door
        minecraft:acacia_door
        minecraft:dark_oak_door
        minecraft:beetroots
        minecraft:frosted_ice
        minecraft:structure_void
        minecraft:white_shulker_box
        minecraft:orange_shulker_box
        minecraft:magenta_shulker_box
        minecraft:light_blue_shulker_box
        minecraft:yellow_shulker_box
        minecraft:lime_shulker_box
        minecraft:pink_shulker_box
        minecraft:gray_shulker_box
        minecraft:silver_shulker_box
        minecraft:cyan_shulker_box
        minecraft:purple_shulker_box
        minecraft:blue_shulker_box
        minecraft:brown_shulker_box
        minecraft:green_shulker_box
        minecraft:red_shulker_box
        minecraft:black_shulker_box
        coroutil:blank
        immersiveengineering:hemp
        immersiveengineering:fake_light
        immersiveengineering:fluidcreosote
        immersiveengineering:fluidplantoil
        immersiveengineering:fluidethanol
        immersiveengineering:fluidbiodiesel
        immersiveengineering:fluidconcrete
        immersiveintelligence:ink
        immersiveintelligence:ink_cyan
        immersiveintelligence:ink_magenta
        immersiveintelligence:ink_yellow
        immersiveintelligence:etching_acid
        immersiveintelligence:sulfuric_acid
        immersiveintelligence:nitric_acid
        immersiveintelligence:hydrofluoric_acid
        immersiveintelligence:brine
        immersiveintelligence:ammonia
        immersiveintelligence:methanol
        immersiveintelligence:hydrogen
        immersiveintelligence:oxygen
        immersiveintelligence:chlorine
        immersivepetroleum:fluid_crude_oil
        immersivepetroleum:fluid_diesel
        immersivepetroleum:fluid_lubricant
        immersivepetroleum:fluid_gasoline
        immersivepetroleum:fluid_napalm
        immersivepetroleum:dummy
        integrateddynamics:part_audio_reader_block
        integrateddynamics:part_block_reader_block
        integrateddynamics:part_entity_reader_block
        integrateddynamics:part_extradimensional_reader_block
        integrateddynamics:part_fluid_reader_block
        integrateddynamics:part_inventory_reader_block
        integrateddynamics:part_machine_reader_block
        integrateddynamics:part_network_reader_block
        integrateddynamics:part_redstone_reader_block
        integrateddynamics:part_world_reader_block
        integrateddynamics:part_audio_writer_block
        integrateddynamics:part_effect_writer_block
        integrateddynamics:part_entity_writer_block
        integrateddynamics:part_machine_writer_block
        integrateddynamics:part_inventory_writer_block
        integrateddynamics:part_redstone_writer_block
        integrateddynamics:part_static_light_panel_block
        integrateddynamics:part_dynamic_light_panel_block
        integrateddynamics:part_display_panel_block
        integrateddynamics:part_connector_mono_directional_block
        integrateddynamics:part_connector_omni_directional_block
        integrateddynamics:menril_leaves
        integrateddynamics:menril_sapling
        integrateddynamics:block_menril_resin
        integrateddynamics:menril_door
        integrateddynamics:block_liquid_chorus
        integratedtunnels:part_interface_energy_block
        integratedtunnels:part_importer_energy_block
        integratedtunnels:part_exporter_energy_block
        integratedtunnels:part_importer_world_energy_block
        integratedtunnels:part_exporter_world_energy_block
        integratedtunnels:part_interface_item_block
        integratedtunnels:part_importer_item_block
        integratedtunnels:part_exporter_item_block
        integratedtunnels:part_importer_world_item_block
        integratedtunnels:part_exporter_world_item_block
        integratedtunnels:part_interface_fluid_block
        integratedtunnels:part_importer_fluid_block
        integratedtunnels:part_exporter_fluid_block
        integratedtunnels:part_importer_world_fluid_block
        integratedtunnels:part_exporter_world_fluid_block
        integratedtunnels:part_importer_world_block_block
        integratedtunnels:part_exporter_world_block_block
        integratedtunnels:part_player_simulator_block
        immersivetech:fluidsteam
        immersivetech:fluiddistwater
        stevescarts:blockjunction
        stevescarts:blockadvdetector
        techguns:bunkerdoor
        techguns:slimyladder
        techguns:block_creeper_acid
        techguns:block_milk
     >

    # Chance for you to lose 1 reputation when you break any block in a village that is not on the
    # "block_blacklist" while your reputation is low enough.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.15 ]
    D:block_rep_loss_chance=0.15

    # The "block_rep_loss_chance" and "block_treasured_rep_loss_chance" only trigger if your reputation
    # in the village is equal to or less than this limit.
    #    >> Integer:[ Range={ -30, 10 }, Default=8 ]
    I:block_rep_loss_limit=8

    # Chance for you to be marked as an aggressor (to be attacked) when you break a block in a village that
    # is on the "block_treasured_list" while your reputation is low enough.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=1.0 ]
    D:block_treasured_aggression_chance=1.0

    # Specific blocks that use separate chances for aggression and rep loss from other blocks.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:emerald_block, minecraft:bookshelf, minecraft:farmland, minecraft:cake } ]
    S:block_treasured_list <
        minecraft:emerald_block
        minecraft:bookshelf
        minecraft:farmland
        minecraft:cake
     >

    # Chance for you to lose 1 reputation when you break a block in a village that is on the "block_treasured_list"
    # while your reputation is low enough.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=1.0 ]
    D:block_treasured_rep_loss_chance=1.0

    # Specific blocks that WILL aggro villagers when broken. If any blocks are specified here, they will
    # then be the only blocks that anger villagers (i.e., trigger reputation loss and aggression).
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={  } ]
    S:block_whitelist <
     >

    # If true, the "/villageinfo" command will state the village center position.
    # As the command has unlimited search radius, disable this to prevent players from using the command
    # to easily find the nearest village.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:command_include_center=true

    # Chance for you to earn 1 reputation for each monster killed near a village. The only reasonable way
    # to restore rep from -15 or lower with "villagers_defend" enabled.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.2 ]
    D:help_rep_chance=0.2

    # If true, all players known to a village will gain 1 rep when a new house is added to a village and
    # lose 1 rep when a house is lost. Highly recommended to keep "refresh_houses" enabled when this is.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:house_rep=true

    # If true, all villagers will spawn with randomized names based on their profession and career.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:name_villagers=true

    # If true, villager names will be marked as 'always shown' so that you do not need to mouse over them
    # to see their names. Also makes them a little easier to keep track of.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:name_villagers_always_show=true

    # If true, houses will stay a part of a village permanently once added (until their doors are destroyed
    # or all villagers in the village are killed), instead of being constantly added/removed as villagers move around.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:refresh_houses=true

    # If true, particle effects will play when players lose or gain village reputation.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:reputation_particles=true

    # If true, villager sound effects will play when players lose or gain village reputation.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:reputation_sounds=true

    # If true, villagers will defend their village by attacking its aggressors and players with
    # 'hated' standing (reputation <= -15), just like their iron golems do in vanilla.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:villagers_defend=true
}


